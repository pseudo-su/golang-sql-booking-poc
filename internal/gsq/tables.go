// Code generated by 'sqgen-postgres tables'; DO NOT EDIT.
package gsq

import (
	sq "github.com/bokwoon95/go-structured-query/postgres"
)

// TABLE__DELETED_USERS references the public._deleted_users table.
type TABLE__DELETED_USERS struct {
	*sq.TableInfo
	DELETED_ID sq.UUIDField
	CREATED_AT sq.TimeField
	DELETED_AT sq.TimeField
	EMAIL      sq.StringField
	FIRST_NAME sq.StringField
	ID         sq.UUIDField
	LAST_NAME  sq.StringField
	MOBILE     sq.StringField
	UPDATED_AT sq.TimeField
}

// DELETED_USERS creates an instance of the public._deleted_users table.
func DELETED_USERS() TABLE__DELETED_USERS {
	tbl := TABLE__DELETED_USERS{TableInfo: &sq.TableInfo{
		Schema: "public",
		Name:   "_deleted_users",
	}}
	tbl.DELETED_ID = sq.NewUUIDField("_deleted_id", tbl.TableInfo)
	tbl.CREATED_AT = sq.NewTimeField("created_at", tbl.TableInfo)
	tbl.DELETED_AT = sq.NewTimeField("deleted_at", tbl.TableInfo)
	tbl.EMAIL = sq.NewStringField("email", tbl.TableInfo)
	tbl.FIRST_NAME = sq.NewStringField("first_name", tbl.TableInfo)
	tbl.ID = sq.NewUUIDField("id", tbl.TableInfo)
	tbl.LAST_NAME = sq.NewStringField("last_name", tbl.TableInfo)
	tbl.MOBILE = sq.NewStringField("mobile", tbl.TableInfo)
	tbl.UPDATED_AT = sq.NewTimeField("updated_at", tbl.TableInfo)
	return tbl
}

// As modifies the alias of the underlying table.
func (tbl TABLE__DELETED_USERS) As(alias string) TABLE__DELETED_USERS {
	tbl.TableInfo.Alias = alias
	return tbl
}

// TABLE_SCHEMA_MIGRATIONS references the public.schema_migrations table.
type TABLE_SCHEMA_MIGRATIONS struct {
	*sq.TableInfo
	DIRTY   sq.BooleanField
	VERSION sq.NumberField
}

// SCHEMA_MIGRATIONS creates an instance of the public.schema_migrations table.
func SCHEMA_MIGRATIONS() TABLE_SCHEMA_MIGRATIONS {
	tbl := TABLE_SCHEMA_MIGRATIONS{TableInfo: &sq.TableInfo{
		Schema: "public",
		Name:   "schema_migrations",
	}}
	tbl.DIRTY = sq.NewBooleanField("dirty", tbl.TableInfo)
	tbl.VERSION = sq.NewNumberField("version", tbl.TableInfo)
	return tbl
}

// As modifies the alias of the underlying table.
func (tbl TABLE_SCHEMA_MIGRATIONS) As(alias string) TABLE_SCHEMA_MIGRATIONS {
	tbl.TableInfo.Alias = alias
	return tbl
}

// TABLE_USERS references the public.users table.
type TABLE_USERS struct {
	*sq.TableInfo
	CREATED_AT sq.TimeField
	DELETED_AT sq.TimeField
	EMAIL      sq.StringField
	FIRST_NAME sq.StringField
	ID         sq.UUIDField
	LAST_NAME  sq.StringField
	MOBILE     sq.StringField
	UPDATED_AT sq.TimeField
}

// USERS creates an instance of the public.users table.
func USERS() TABLE_USERS {
	tbl := TABLE_USERS{TableInfo: &sq.TableInfo{
		Schema: "public",
		Name:   "users",
	}}
	tbl.CREATED_AT = sq.NewTimeField("created_at", tbl.TableInfo)
	tbl.DELETED_AT = sq.NewTimeField("deleted_at", tbl.TableInfo)
	tbl.EMAIL = sq.NewStringField("email", tbl.TableInfo)
	tbl.FIRST_NAME = sq.NewStringField("first_name", tbl.TableInfo)
	tbl.ID = sq.NewUUIDField("id", tbl.TableInfo)
	tbl.LAST_NAME = sq.NewStringField("last_name", tbl.TableInfo)
	tbl.MOBILE = sq.NewStringField("mobile", tbl.TableInfo)
	tbl.UPDATED_AT = sq.NewTimeField("updated_at", tbl.TableInfo)
	return tbl
}

// As modifies the alias of the underlying table.
func (tbl TABLE_USERS) As(alias string) TABLE_USERS {
	tbl.TableInfo.Alias = alias
	return tbl
}
